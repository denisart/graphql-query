[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "graphql_query/__version__.py"

[project]
name = "graphql_query"
description = "Complete GraphQL query string generation for python."
readme = "README.md"
authors = [
    {name = "Denis A. Artyushin", email = "artyushinden@gmail.com"},
]
keywords = [
    "python", "graphql", "graphql-query",
    "query-builder", "code-generation", "codegen",
    "query-generator", "graphql-query-builder", "query-generation",
]
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Framework :: Pydantic",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.7"
dependencies = [
    "pydantic>=1.10, <1.11",
    "jinja2>=3.1, <3.2",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/denisart/graphql-query"
Documentation = "https://denisart.github.io/graphql-query/"
Source = "https://github.com/denisart/graphql-query"

[project.optional-dependencies]
# all requirements for linting, building and etc.
dev = [
    "mypy",
    "ruff",
    "pylint-pydantic",
    "wheel",
    "black",
]

# all requirements for tests
test = [
    "pytest",
    "pytest-mock",
    "pytest-cov",
]

# all requirements for docs generation
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-argparse",
    "sphinxcontrib-github",
]

[tool.ruff]
line-length = 120
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 14 }
isort = { known-first-party = ['graphql_core', 'tests'] }
target-version = "py37"

[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true
